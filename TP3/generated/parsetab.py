
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADD_OPleftMUL_OPrightUMINUSADD_OP IDENTIFIER MUL_OP NUMBER PRINT WHILEprogramme : statement \';\' programmeprogramme : statementstatement : assignation\n        | structurestatement : PRINT expressionstructure : WHILE expression \'{\' programme \'}\' assignation : IDENTIFIER "=" expression expression : IDENTIFIERexpression : NUMBERexpression : ADD_OP expression %prec UMINUSexpression : \'(\' expression \')\'expression : expression ADD_OP expression\n        | expression MUL_OP expression'
    
_lr_action_items = {'PRINT':([0,8,22,],[5,5,5,]),'IDENTIFIER':([0,5,7,8,12,13,14,17,18,22,],[6,10,10,6,10,10,10,10,10,6,]),'WHILE':([0,8,22,],[7,7,7,]),'$end':([1,2,3,4,9,10,11,16,19,21,23,24,25,27,],[0,-2,-3,-4,-5,-8,-9,-1,-10,-7,-12,-13,-11,-6,]),';':([2,3,4,9,10,11,19,21,23,24,25,27,],[8,-3,-4,-5,-8,-9,-10,-7,-12,-13,-11,-6,]),'}':([2,3,4,9,10,11,16,19,21,23,24,25,26,27,],[-2,-3,-4,-5,-8,-9,-1,-10,-7,-12,-13,-11,27,-6,]),'NUMBER':([5,7,12,13,14,17,18,],[11,11,11,11,11,11,11,]),'ADD_OP':([5,7,9,10,11,12,13,14,15,17,18,19,20,21,23,24,25,],[12,12,17,-8,-9,12,12,12,17,12,12,-10,17,17,-12,-13,-11,]),'(':([5,7,12,13,14,17,18,],[13,13,13,13,13,13,13,]),'=':([6,],[14,]),'MUL_OP':([9,10,11,15,19,20,21,23,24,25,],[18,-8,-9,18,-10,18,18,18,-13,-11,]),'{':([10,11,15,19,23,24,25,],[-8,-9,22,-10,-12,-13,-11,]),')':([10,11,19,20,23,24,25,],[-8,-9,-10,25,-12,-13,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,8,22,],[1,16,26,]),'statement':([0,8,22,],[2,2,2,]),'assignation':([0,8,22,],[3,3,3,]),'structure':([0,8,22,],[4,4,4,]),'expression':([5,7,12,13,14,17,18,],[9,15,19,20,21,23,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement ; programme','programme',3,'p_programme_expr','parser4.py',6),
  ('programme -> statement','programme',1,'p_programme_statement','parser4.py',10),
  ('statement -> assignation','statement',1,'p_statement','parser4.py',14),
  ('statement -> structure','statement',1,'p_statement','parser4.py',15),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser4.py',19),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser4.py',23),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser4.py',27),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','parser4.py',31),
  ('expression -> NUMBER','expression',1,'p_expression','parser4.py',35),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser4.py',45),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser4.py',49),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser4.py',53),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser4.py',54),
]
